services:
  #exclude for now nextjs
  # web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   environment:
  #     NODE_ENV: development
  #     NEXT_PUBLIC_API_URL: http://api:8080
  #     DATABASE_URL: postgresql://postgres:password@postgres:5432/testing?sslmode=disable
  #   ports:
  #     - '3000:3000'
  #   command: npm run dev
  #   depends_on:
  #     - api
  #     - postgres

  api:
    build:
      context: ./backend
      dockerfile: go.dockerfile
    ports:
      - '8080:8080'
    # develop:
    #   watch:
    #     - action: rebuild
    #       path: ./backend
    #       files:
    #         - '**/*.go'
    #         - 'go.mod'
    #         - 'go.sum'
    depends_on:
      - postgres
    volumes:
      - ./images/adoptPostImages:/app/adoptPostImages
      - ./images/lostPetImages:/app/lostPetImages
      - ./images/donationPostImages:/app/donationPostImages

    # volumes:
    #   adoptPostImages:
    #   lostPetImages:
    #   donationPostImages:
    #   # volumes:
    #   #   - ./backend/adoptPostImages:/app/adoptPostImages/
    #   #   - ./backend/lostPetImages:/app/lostPetImages
    #   #   - ./backend/donationPostImages:/app/donationPostImages

    environment:
      DATABASE_URL: postgresql://postgres:password@postgres/testing?sslmode=disable

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: testing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - '5432:5432'
    volumes:
      - postgres-volume:/var/lib/postgresql/data

volumes:
  postgres-volume:
